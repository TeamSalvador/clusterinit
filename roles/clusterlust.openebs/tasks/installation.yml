---
- name: Setup helm repository
  when: desired_state == 'present'
  kubernetes.core.helm_repository:
    binary_path: "{{ helm_binary }}"
    name: "{{ helm_repo_name }}"
    url: "{{ helm_repo_url }}"
    state: present

- name: Manage the OpenEBS  helm chart
  kubernetes.core.helm:
    binary_path: "{{ helm_binary }}"
    create_namespace: true
    chart_ref: "{{ helm_repo_name }}/{{ helm_chart_name }}"
    name: "{{ helm_chart_name }}"
    release_namespace: "{{ ebs_namespace }}"
    release_values: "{{ openebs_release_values }}"
    reuse_values: true
    state: "{{ desired_state }}"
    update_repo_cache: true
    wait: true

- name: Manage Default StorageClass
  kubernetes.core.k8s:
    state: "{{ desired_state }}"
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        annotations:
          cas.openebs.io/config: |
            - name: StorageType
              value: hostpath
            - name: BasePath
              value: "{{ base_path }}"
          meta.helm.sh/release-name: openebs
          meta.helm.sh/release-namespace: openebs
          openebs.io/cas-type: local
          storageclass.kubernetes.io/is-default-class: "true"
        labels:
          app.kubernetes.io/managed-by: Helm
        name: openebs-hostpath
      provisioner: openebs.io/local
      reclaimPolicy: Delete
      volumeBindingMode: WaitForFirstConsumer
      allowedTopologies:
        - matchLabelExpressions:
            - key: kubernetes.io/hostname
              values: "{{ groups['kube_node'] | map('extract', hostvars, 'inventory_hostname') | list }}"


- name: Manage PersistentVolumeClaim
  kubernetes.core.k8s:
    state: "{{ desired_state }}"
    namespace: "{{ ebs_namespace }}"
    definition:
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: local-hostpath-pvc
      spec:
        storageClassName: openebs-hostpath
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ pvc_size }}"

- name: Remove helm repository
  when: desired_state == 'absent'
  kubernetes.core.helm_repository:
    binary_path: "{{ helm_binary }}"
    name: "{{ helm_repo_name }}"
    url: "{{ helm_repo_url }}"
    state: absent
